{"version":3,"sources":["Routes/TodoTemplate.js","Routes/TodoInsert.js","Routes/TodoListItem.js","Routes/TodoList.js","Routes/Init.js","App.js","index.js"],"names":["TodoTamplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","TodoList","todos","map","Init","setTodos","nextId","useRef","current","concat","filter","App","path","process","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAWeA,EATM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,uCACA,qBAAKA,UAAU,UAAf,SAA0BD,Q,OCyBjBE,G,MA3BI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,uBAAY,SAACC,GAC5BH,EAASG,EAAEC,OAAOL,SACjB,IACGM,EAAWH,uBACf,SAACC,GACCN,EAASE,GACTC,EAAS,IACTG,EAAEG,mBAEJ,CAACT,EAAUE,IAEb,OACE,uBAAMJ,UAAU,aAAaU,SAAUA,EAAvC,UACE,uBACEE,YAAY,oDACZR,MAAOA,EACPE,SAAUA,IAEZ,wBAAQO,KAAK,SAAb,SACE,cAAC,IAAD,W,iBCDOC,G,MAfM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAClB,OACE,sBAAKpB,UAAU,eAAf,UACE,sBAAKA,UAAWqB,IAAG,WAAY,CAAED,YAAYE,QAAS,kBAAML,EAASC,IAArE,UACGE,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC5B,qBAAKpB,UAAU,OAAf,SAAuBmB,OAEzB,qBAAKnB,UAAU,SAASsB,QAAS,kBAAMN,EAASE,IAAhD,SACE,cAAC,IAAD,WCAOK,G,MAfE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,qBAAKjB,UAAU,WAAf,SACGwB,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CACEA,KAAMA,EAENC,SAAUA,EACVC,SAAUA,GAFLF,EAAKG,WC0CLQ,MA9Cf,WACE,MAA0BvB,mBAAS,CACjC,CAAEe,GAAI,EAAGC,KAAM,oDAAaC,SAAS,KADvC,mBAAOI,EAAP,KAAcG,EAAd,KAMMC,EAASC,iBAAO,GAChB3B,EAAWK,uBACf,SAACY,GACC,IAAMJ,EAAO,CACXG,GAAIU,EAAOE,QACXX,OACAC,SAAS,GAEXO,EAASH,EAAMO,OAAOhB,IACtBa,EAAOE,SAAW,IAEpB,CAACN,IAGGR,EAAWT,uBACf,SAACW,GACCS,EAASH,EAAMQ,QAAO,SAACjB,GAAD,OAAUA,EAAKG,KAAOA,QAE9C,CAACM,IAGGP,EAAWV,uBACf,SAACW,GACCS,EACEH,EAAMC,KAAI,SAACV,GAAD,OACRA,EAAKG,KAAOA,EAAZ,2BAAsBH,GAAtB,IAA4BK,SAAUL,EAAKK,UAAYL,QAI7D,CAACS,IAEH,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAYtB,SAAUA,IACtB,cAAC,EAAD,CAAUsB,MAAOA,EAAOR,SAAUA,EAAUC,SAAUA,QCjC7CgB,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAI,UAAKC,qBAAL,KAAgCC,QAAS,cAAC,EAAD,WCF5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.15694e80.chunk.js","sourcesContent":["import \"./styles/TodoTemplate.scss\";\r\n\r\nconst TodoTamplate = ({ children }) => {\r\n  return (\r\n    <div className=\"TodoTemplate\">\r\n      <div className=\"app-title\">일정 관리</div>\r\n      <div className=\"content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTamplate;\r\n","import { useState, useCallback } from \"react\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport \"./styles/TodoInsert.scss\";\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      onInsert(value);\r\n      setValue(\"\"); // value 값 초기화\r\n      e.preventDefault();\r\n    },\r\n    [onInsert, value]\r\n  );\r\n  return (\r\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n      <input\r\n        placeholder=\"할일을 입력하세요\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <button type=\"submit\">\r\n        <MdAdd />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline,\r\n} from \"react-icons/md\";\r\n\r\nimport cn from \"classnames\";\r\nimport \"./styles/TodoListItem.scss\";\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\r\n  const { id, text, checked } = todo;\r\n  return (\r\n    <div className=\"TodoListItem\">\r\n      <div className={cn(\"checkBox\", { checked })} onClick={() => onToggle(id)}>\r\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n        <div className=\"text\">{text}</div>\r\n      </div>\r\n      <div className=\"remove\" onClick={() => onRemove(id)}>\r\n        <MdRemoveCircleOutline />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from \"./TodoListItem\";\r\nimport \"./styles/TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  return (\r\n    <div className=\"TodoList\">\r\n      {todos.map((todo) => (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={todo.id}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useState, useRef, useCallback } from \"react\";\r\nimport TodoTamplate from \"./TodoTemplate\";\r\nimport TodoInsert from \"./TodoInsert\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction Init() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, text: \"일정을 적어보세요\", checked: false },\r\n  ]);\r\n\r\n  // 고윳값으로 사용될 id\r\n  // ref를 사용하여 변수 담기\r\n  const nextId = useRef(2);\r\n  const onInsert = useCallback(\r\n    (text) => {\r\n      const todo = {\r\n        id: nextId.current,\r\n        text,\r\n        checked: false,\r\n      };\r\n      setTodos(todos.concat(todo));\r\n      nextId.current += 1;\r\n    },\r\n    [todos]\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    (id) => {\r\n      setTodos(todos.filter((todo) => todo.id !== id));\r\n    },\r\n    [todos]\r\n  );\r\n\r\n  const onToggle = useCallback(\r\n    (id) => {\r\n      setTodos(\r\n        todos.map((todo) =>\r\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\r\n        )\r\n      );\r\n    },\r\n    [todos]\r\n  );\r\n  return (\r\n    <TodoTamplate>\r\n      <TodoInsert onInsert={onInsert} />\r\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\r\n    </TodoTamplate>\r\n  );\r\n}\r\n\r\nexport default Init;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport TodoInit from \"./Routes/Init\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<TodoInit />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Routes/styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}